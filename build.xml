<?xml version="1.0" encoding="UTF-8"?>
<!--
** This is a template build file for a JOSM  plugin.
**
** Maintaining versions
** ====================
** see README.template
**
** Usage
** =====
** To build it run
**
**    > ant  dist
**
** To install the generated plugin locally (in you default plugin directory) run
**
**    > ant  install
**
** The generated plugin jar is not automatically available in JOSMs plugin configuration
** dialog. You have to check it in first.
**
** Use the ant target 'publish' to check in the plugin and make it available to other
** JOSM users:
**    set the properties commit.message and plugin.main.version
** and run
**    > ant  publish
**
**
-->
<project name="kendzi3dTitleRender" default="dist" basedir=".">
	
	<property name="plugin.author" value="Tomasz Kędziora (Kendzi)" />
	
    <!--
      ************************************************
      ** should not be necessary to change the following properties
     -->
    <property name="plugin.build.dir"       value="build"/>
	
    <property name="josm"                   location="../JOSM/dist/josm-custom.jar"/>
    <property name="kendzi3d"               location="../JOSM/dist/kendzi3d.jar"/>
	<property name="kendzi3d_minimal.jar"   value="${plugin.build.dir}\kendzi3d\kendzi3d_minimal.jar"/>
	
    <property name="plugin.build.jar.dir"       value="build/jar"/>
    <property name="plugin.src.dir"         value="src"/>
    <!-- this is the directory where the plugin jar is copied to -->
    <property name="ant.build.javac.target" value="1.6"/>
    <property name="plugin.dist.dir"        value="../JOSM/dist"/>
<!--    <property name="plugin.dist.dir"        value="../JOSM/dist"/> -->
    <property name="plugin.jar"             value="${plugin.dist.dir}/${ant.project.name}.jar"/>
	
    <property name="plugin.jar"             value="${plugin.dist.dir}/${ant.project.name}.jar"/>
    <property name="dist"             		value="dist"/>

    <!--
    **********************************************************
    ** init - initializes the build
    **********************************************************
    -->
    <target name="init">
        <mkdir dir="${plugin.build.dir}"/>
        <mkdir dir="${plugin.build.jar.dir}"/>
        <mkdir dir="${plugin.build.dir}/resources"/>
        <mkdir dir="${plugin.build.dir}/kendzi3d"/>
    </target>

    <!--
    **********************************************************
    ** compile - complies the source tree
    **********************************************************
    -->
    <target name="compile" depends="init">
        <echo message="compiling sources for  ${plugin.jar} ... "/>
        <javac srcdir="src" classpath="${josm};${kendzi3d}" debug="true" destdir="${plugin.build.jar.dir}">
            <compilerarg value="-Xlint:deprecation"/>
            <compilerarg value="-Xlint:unchecked"/>
        	<classpath>
				<pathelement location="${josm}"/>
				<fileset dir="lib">
					<include name="**/*.jar"/>
				</fileset>
			</classpath>
        </javac>
    </target>

    <!--
    **********************************************************
    ** dist - creates the plugin jar
    **********************************************************
    -->
    <target name="dist" depends="compile,revision">
        <echo message="creating ${ant.project.name}.jar ... "/>

        <copy todir="${plugin.build.jar.dir}">
            <fileset dir=".">
                <include name="README" />
                <include name="LICENSE" />
            	<exclude name="lib/"/>
            </fileset>
        </copy>
    	
    	
    	<echo>{version.entry.commit.date}: ${version.entry.commit.date}</echo>
    	<echo>{version.entry.commit.revision}: ${version.entry.commit.revision}</echo>
    	<echo>{build.number}: ${build.number}</echo>
    	
    	<echo>{plugin.jar}: ${plugin.jar}</echo>
    	<echo>{plugin.build.jar.dir}: ${plugin.build.jar.dir}</echo>
    	
        <jar destfile="${plugin.jar}" basedir="${plugin.build.jar.dir}">
        	 
        	
        	<!--
        ************************************************
        ** configure these properties. Most of them will be copied to the plugins
        ** manifest file. Property values will also show up in the list available
        ** plugins: http://josm.openstreetmap.de/wiki/Plugins.
        **
        ************************************************
    -->
            <manifest>
                <attribute name="Author" value="Tomasz Kędziora (kendzi)"/>
                <attribute name="Plugin-Class" value="kendzi.josm.kendzi3d.Kendzi3DPlugin"/>
                <attribute name="Plugin-Date" value="${version.entry.commit.date}"/>
                <attribute name="Plugin-Description" value="Simple 3D view of osm data. It is highly experimental. It may crash! Use with caution!"/>
            	<attribute name="Plugin-Icon" value="images/stock_3d-effects24.png"/>
            	<!--attribute name="Plugin-Icon" value="images/dialogs/icon_error24.png"/ -->
            	<attribute name="Plugin-Link" value="http://wiki.openstreetmap.org/index.php/JOSM/Plugins/Kendzi3D"/>
            					
                <attribute name="Plugin-Mainversion" value="${plugin.main.version}"/>
                <attribute name="Plugin-Version" value="${version.entry.commit.revision}"/>
            </manifest>
        </jar>
    	<!--
    	<unzip src="${kendzi3d}"
    	       dest="${plugin.build.dir}\kendzi3d\">
    		 <patternset>
    	        <include name="resources/*"/>    	       
    	        <include name="models/*"/>    	       
    	        <include name="textures/*"/>    	       
    	    </patternset>
    	</unzip>
    	-->
    	<jar destfile="${kendzi3d_minimal.jar}">
    	    <zipfileset src="${kendzi3d}" >
    	    	<exclude name="resources/"/>
    	    	<exclude name="models/"/>
    	    	<exclude name="textures/"/>
    	    	<exclude name="images/"/>
    	    	<exclude name="lib/"/>
    	   	</zipfileset>
    	</jar>
    	
		<zip destfile="${dist}/kendzi3dTitleRender.zip">
			<zipfileset dir="${plugin.build.dir}/resources" prefix="resources" includes="*"/>
			<!--<zipfileset dir="${plugin.build.dir}/kendzi3d/" prefix="resources"/>-->
			<zipfileset src="${kendzi3d}" prefix="kendzi3d" >
				<include name="resources/"/>    	       
	    	   	<include name="models/"/>    	       
	    	    <include name="textures/"/> 
		   	</zipfileset>
			
			<zipfileset dir="lib" prefix="lib" >
				<exclude name="jogl/"/>
				<exclude name="tmp/"/>
			</zipfileset>
			<zipfileset file="${plugin.jar}" />
			<zipfileset file="run32.bat" />
			<zipfileset file="run64.bat" />
			<zipfileset file="log4j.properties" />
			<zipfileset file="${kendzi3d_minimal.jar}" prefix="lib"/>
			
			
			<zipfileset file="${josm}" prefix="lib"/>
			<zipfileset file="render.properties" />
		</zip>
    </target>

    <!--
    **********************************************************
    ** revision - extracts the current revision number for the
    **    file build.number and stores it in the XML property
    **    version.*
    **********************************************************
    -->
    <target name="revision">
    	 <!--
        <exec append="false" output="REVISION" executable="svn" failifexecutionfails="false">
            <env key="LANG" value="C"/>
            <arg value="info"/>
            <arg value="- -xml"/>
            <arg value="."/>
        </exec>
        <xmlproperty file="REVISION" prefix="version" keepRoot="false" collapseAttributes="true"/>
        <delete file="REVISION"/>
        -->
    	
    	<buildnumber/>
    	 
		<tstamp>
		  	<format property="version.entry.commit.date" pattern="yyyy-MM-dd hh:mm aa"/>
		</tstamp>
    	<property name="version.entry.commit.revision" value="${build.number}" />
    	
    	 <echo>{version.entry.commit.date}: ${version.entry.commit.date}</echo>
    	 <echo>{version.entry.commit.revision}: ${version.entry.commit.revision}</echo>
    	 <echo>{build.number}: ${build.number}</echo>
    	       

    </target>

    <!--
    **********************************************************
    ** clean - clean up the build environment
    **********************************************************
    -->
    <target name="clean">
        <delete dir="${plugin.build.jar.dir}"/>
        <delete file="${plugin.jar}"/>
        <delete file="${plugin.build.dir}"/>
    </target>

    <!--
    **********************************************************
    ** install - install the plugin in your local JOSM installation
    **********************************************************
    -->
    <target name="install" depends="dist">
        <property environment="env"/>
    	  	 
    	<!--
        <condition property="josm.plugins.dir" value="c:\josm_dev\plugins\" else="${user.home}/.josm/plugins">
    	<condition property="josm.plugins.dir" value="${env.APPDATA}\Roaming\JOSM\plugins\" else="${user.home}/.josm/plugins">
 		-->
    	<condition property="josm.plugins.dir" value="${env.APPDATA}\JOSM\plugins\" else="${user.home}/.josm/plugins">
            <and>
                <os family="windows"/>
            </and>
        </condition>
    	<echo>{josm.plugins.dir}: ${josm.plugins.dir}</echo>
        <copy file="${plugin.jar}" todir="${josm.plugins.dir}"/>
    </target>


    <!--
    ************************** Publishing the plugin *********************************** 
    -->
    <!--
        ** extracts the JOSM release for the JOSM version in ../core and saves it in the 
        ** property ${coreversion.info.entry.revision}
        **
        -->
    <target name="core-info">
        <exec append="false" output="core.info.xml" executable="svn" failifexecutionfails="false">
            <env key="LANG" value="C"/>
            <arg value="info"/>
            <arg value="--xml"/>
            <arg value="../../core"/>
        </exec>
        <xmlproperty file="core.info.xml" prefix="coreversion" keepRoot="true" collapseAttributes="true"/>
        <echo>Building against core revision ${coreversion.info.entry.revision}.</echo>
        <echo>Plugin-Mainversion is set to ${plugin.main.version}.</echo>
        <delete file="core.info.xml" />
    </target>


	
</project>
